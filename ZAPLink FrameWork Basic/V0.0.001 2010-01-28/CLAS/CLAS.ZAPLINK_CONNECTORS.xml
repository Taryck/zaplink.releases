<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="5D44240A33CAAE0872F44D8144D82E22" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_CONNECTORS" TYPE="CLAS" VERSION="1.0">
 <DIRECTORY DEVCLASS="ZAPLINK-FRAMEWORK-CORE" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" UUID="DCFD034B756EB95AE1000000AC120173" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X" MSG_ID="ZAPLINK_CONNECTOR">
   <TEXTS>
    <ITEM LANGU="E" DESCRIPT="Zap Link Component"/>
   </TEXTS>
  </A0_MAINDATA>
  <ALIASES>
   <ITEM CMPNAME="TD_COMPEXISTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPEXISTS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_COMPNAME" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPNAME">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_COMPTEXT" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPTEXT">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_COMPTYPE" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_COMPTYPE">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_CONNCLASS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_CONNCLASS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_CONNEXISTS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_CONNEXISTS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_CONNUUID" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_CONNUUID">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_DEVCLASS" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_DEVCLASS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_FILENAME" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_FILENAME">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_OBJ_TYPE" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_OBJ_TYPE">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_TYPEORDER" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_TYPEORDER">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TD_TYPE_AS_TEXT" VERSION="1" EXPOSURE="2" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TD_TYPE_AS_TEXT">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_CONN_CLASS" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TS_CONN_CLASS">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_CONN_DEF" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TS_CONN_DEF">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_CONNECTORLIST" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_CONNECTORLIST">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_TYPES" VERSION="1" EXPOSURE="1" CMPTYPE="3" REFCLSNAME="ZAPLINK_DATATYPES" REFCMPNAME="TT_TYPES">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
  </ALIASES>
  <ATTRIBUTS>
   <ITEM CMPNAME="CONNECTOR_LIST" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TT_CONNECTORLIST">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connectors for all components types"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="EXISTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" TYPTYPE="4" SRCROW1="48 " SRCCOLUMN1="4 " SRCROW2="51 " SRCCOLUMN2="20 " TYPESRC_LENG="205 " TYPESRC="BEGIN OF exists,
          exists     TYPE td_connexists VALUE ZAPLINK_DATATYPES~EXISTS-exists,
          not_exists TYPE td_connexists VALUE ZAPLINK_DATATYPES~EXISTS-not_exists,
        END OF exists
">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connector Exists constants"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="LOCAL_DEVCLASS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="&apos;$LOCAL$&apos;" TYPTYPE="1" TYPE="TD_DEVCLASS">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Devclass for Local class"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="MAX_ORDER" VERSION="1" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;999999&apos;" TYPTYPE="1" TYPE="TD_TYPEORDER">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Max (and default) Rank for type"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_CX" VERSION="1" STATE="1" EDITORDER="5 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TO_ROOT_EXCEPTION">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="O_MYCX" VERSION="1" STATE="1" EDITORDER="1 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TO_EXCEPTION">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="SAPTYPES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TT_SAPTYPES">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="List of SAP Types"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="VALUE_TABLE" VERSION="1" STATE="1" EDITORDER="2 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TT_VALUES">
    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="XMLENGINE" VERSION="1" STATE="1" EDITORDER="3 " ATTDECLTYP="1" TYPTYPE="3" TYPE="IF_IXML">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="XML Engine"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_CLASSES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TT_CLASSES">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Classe list"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_MSG_COLL" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " ATTDECLTYP="1" TYPTYPE="1" TYPE="TO_MSG_COLL">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Message Collector"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <INTERFACES>
   <ITEM REFCLSNAME="ZAPLINK_DATATYPES" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1"/>
  </INTERFACES>
  <LOCAL>
   <TYPES>*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* in the implementation part of the class

INCLUDE ZAPLINK_MACROS.</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="ADD_LOCAL_CONNECTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Add Local connectors"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="LOCAL_CLASS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_CONNCLASS">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Object Type : ClassName"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  TRY.

      _add_connector( class = local_class
                   devclass = local_devclass ).
      _update_def_class( ).

    CATCH zaplink_cx_connector INTO o_mycx.
      RAISE EXCEPTION o_mycx.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLASS_CONSTRUCTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " MTDTYPE="2" MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="CLASS_CONSTRUCTOR"/>
    </TEXTS>
    <SOURCE>  DATA t_types    TYPE STANDARD TABLE OF ko100 WITH DEFAULT KEY.
  DATA s_saptypes LIKE LINE OF saptypes.
  DATA t_saptypes TYPE STANDARD TABLE OF ts_saptypes.
  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF t_types.

* Create XML Engine
  xmlengine = cl_ixml=&gt;create( ).

  CALL FUNCTION &apos;TR_OBJECT_TABLE&apos;
*   IMPORTING
*     WE_TABLE_LINES       =
    TABLES
      wt_object_text       = t_types.

  SORT t_types BY object.
  DELETE ADJACENT DUPLICATES FROM t_types COMPARING object.

  LOOP AT t_types ASSIGNING &lt;t&gt;.
    CLEAR s_saptypes. s_saptypes-hdr = &lt;t&gt;.
    s_saptypes-order = max_order.
    APPEND s_saptypes TO t_saptypes.
  ENDLOOP.

  saptypes = t_saptypes.

  s_saptypes-order = 50.  MODIFY saptypes FROM s_saptypes TRANSPORTING order WHERE object = &apos;DEVC&apos;.
  s_saptypes-order = 100. MODIFY saptypes FROM s_saptypes TRANSPORTING order WHERE object = &apos;INTF&apos;.
  s_saptypes-order = 150. MODIFY saptypes FROM s_saptypes TRANSPORTING order WHERE object = &apos;CLAS&apos;.

  reset_connectors( ).
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CLEAR_CONNECTORS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Remove all connectors"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100127">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  clear CONNECTOR_LIST.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="CREATE_CONNECTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connector : Getter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CONNUUID" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091123" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_CONNUUID" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="3 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_CONNECTOR">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAP Link Connector interface"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA _cx        TYPE REF TO cx_root.
  DATA _conn      LIKE LINE OF connector_list.
  DATA _classname TYPE td_connclass.
  FIELD-SYMBOLS:
    &lt;cl&gt; LIKE LINE OF _classes,
    &lt;c&gt; LIKE LINE OF _conn-classes.

* Check same class already loaded
  IF NOT connuuid IS INITIAL.
    READ TABLE _classes ASSIGNING &lt;cl&gt;
               WITH TABLE KEY uuid = connuuid.
    IF sy-subrc &lt;&gt; 0.
* Class &apos;&amp;CONNUUID&amp;&apos; for type &apos;&amp;TYPE&amp;&apos; is not a valid connector. Check attribute SUPPORTED_TYPES of Class &apos;&amp;CONNCLASS&amp;&apos;
      RAISE EXCEPTION TYPE zaplink_cx_connector
                 EXPORTING textid = zaplink_cx_connector=&gt;invalid_uuid
                             type = type
                         connuuid = connuuid.
    ELSE.
      IF NOT type IS INITIAL.
        READ TABLE &lt;cl&gt;-types TRANSPORTING NO FIELDS
             WITH TABLE KEY type = type.
        IF sy-subrc &lt;&gt; 0.
* Class &apos;&amp;CONNUUID&amp;&apos; for type &apos;&amp;TYPE&amp;&apos; is not a valid connector. Check attribute SUPPORTED_TYPES of Class &apos;&amp;CONNCLASS&amp;&apos;
          RAISE EXCEPTION TYPE zaplink_cx_connector
                     EXPORTING textid = zaplink_cx_connector=&gt;invalid_uuid
                                 type = type
                             connuuid = connuuid.
        ENDIF.
      ENDIF.
    ENDIF.
    _classname = &lt;cl&gt;-classname.
  ELSEIF NOT type IS INITIAL.
    TRY.
        _conn = _search_connector( type ).
      CATCH zaplink_cx_connector INTO o_mycx.
        RAISE EXCEPTION o_mycx.
    ENDTRY.
    IF NOT _conn-classes IS INITIAL AND _conn-default_class IS INITIAL.
      READ TABLE _conn-classes ASSIGNING &lt;c&gt; INDEX 1.
      IF sy-subrc = 0.
        _conn-default_class = &lt;c&gt;-classname.
      ENDIF.
    ENDIF.
    _classname = _conn-default_class.
  ELSE.
* Class &apos;&amp;CONNUUID&amp;&apos; for type &apos;&amp;TYPE&amp;&apos; is not a valid connector. Check attribute SUPPORTED_TYPES of Class &apos;&amp;CONNCLASS&amp;&apos;
    RAISE EXCEPTION TYPE zaplink_cx_connector
               EXPORTING textid = zaplink_cx_connector=&gt;invalid_uuid
                           type = type
                       connuuid = connuuid.
  ENDIF.

  IF NOT _classname IS INITIAL.
    TRY.
        CREATE OBJECT result TYPE (_classname).
      CATCH cx_root INTO _cx.
        RAISE EXCEPTION TYPE zaplink_cx_connector
                   EXPORTING textid = zaplink_cx=&gt;system_error
                           previous = _cx.
    ENDTRY.
  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="DO_EXISTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connector Exists ?"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091118" PARDECLTYP="3" TYPTYPE="1" TYPE="TD_CONNEXISTS">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Connector exists (&apos;X&apos;) or not (&apos; &apos;)"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20091118" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA _cx   TYPE REF TO zaplink_cx_component.
  DATA _conn LIKE LINE OF connector_list.

  TRY.
      result = exists-not_exists.
      _conn = _search_connector( type ).

      IF NOT _conn-classes IS INITIAL.
        result = exists-exists.
      ENDIF.

    CATCH zaplink_cx_component INTO _cx.
      RAISE EXCEPTION _cx.
  ENDTRY.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_CLASSNAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Get conenctor&apos;s classname"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="O_CONN" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091127" PARPASSTYP="1" TYPTYPE="1" TYPE="TO_CONNECTOR">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAP Link Connector interface"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091127" CHANGEDBY="TBENSIAL" CHANGEDON="20091127" PARDECLTYP="3" TYPTYPE="1" TYPE="TD_CONNCLASS">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091127">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA o_typedesc TYPE REF TO cl_abap_objectdescr.

  CHECK o_conn IS BOUND.
  o_typedesc ?= cl_abap_objectdescr=&gt;describe_by_object_ref( o_conn ).
  result = o_typedesc-&gt;get_relative_name( ).
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_TYPEORDER" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Get order of object Type"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100125" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20100125" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARDECLTYP="3" TYPTYPE="1" TYPE="TD_TYPEORDER">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF saptypes.

  READ TABLE saptypes ASSIGNING &lt;t&gt;
       WITH TABLE KEY object = data.
  IF sy-subrc = 0.
    result = &lt;t&gt;-order.
  ELSE.
    result = max_order.
  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_VALUES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connector Search Helps"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>  data lt_return type STANDARD TABLE OF DDSHRETVAL.

  CALL FUNCTION &apos;F4IF_INT_TABLE_VALUE_REQUEST&apos;
    EXPORTING
*     DDIC_STRUCTURE         = &apos; &apos;
      retfield               = &apos;OBJECT&apos;
*     PVALKEY                = &apos; &apos;
*     DYNPPROG               = &apos; &apos;
*     DYNPNR                 = &apos; &apos;
*     DYNPROFIELD            = &apos; &apos;
*     STEPL                  = 0
      WINDOW_TITLE           = &apos;Installed connectors&apos;(SH1)
      VALUE                  = TYPE
      VALUE_ORG              = &apos;S&apos;
*     MULTIPLE_CHOICE        = &apos; &apos;
*     DISPLAY                = &apos; &apos;
*     CALLBACK_PROGRAM       = &apos; &apos;
*     CALLBACK_FORM          = &apos; &apos;
*     MARK_TAB               =
*   IMPORTING
*     USER_RESET             =
    tables
      value_tab              = value_table
*     FIELD_TAB              =
      RETURN_TAB             = lt_return
*     DYNPFLD_MAPPING        =
    EXCEPTIONS
      PARAMETER_ERROR        = 1
      NO_VALUES_FOUND        = 2
      OTHERS                 = 3
            .
  IF sy-subrc &lt;&gt; 0.
  else.

  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="NODE_2_RAW" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Convert XML node to RAW"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="NODE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091125" PARPASSTYP="1" TYPTYPE="3" TYPE="IF_IXML_NODE">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="IF_IXML_NODE"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091125" PARDECLTYP="3" TYPTYPE="1" TYPE="TO_RAW">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="RAW component with data"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091125">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA ez_xml    TYPE REF TO zaplink_easyxml.
  DATA _xml_comp TYPE REF TO if_ixml_document.
  DATA _clone    TYPE REF TO if_ixml_node.
  DATA _cx       TYPE REF TO zaplink_cx.

  _xml_comp = xmlengine-&gt;create_document( ).
  _clone = node-&gt;clone( ).
  _xml_comp-&gt;if_ixml_node~append_child( _clone ).
  CREATE OBJECT result.
  CREATE OBJECT ez_xml.
  TRY.
      CALL METHOD ez_xml-&gt;xml2any
        EXPORTING
          xmldoc = _xml_comp
        CHANGING
          any    = result.
    CATCH zaplink_cx INTO _cx.
      create OBJECT o_mycx EXPORTING
             textid = zaplink_cx=&gt;SYSTEM_ERROR
            prev_cx = _cx.
      o_mycx-&gt;update( ).
      RAISE EXCEPTION o_mycx.
  ENDTRY.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="RESET_CONNECTORS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Reset all connectors to default (remove local)"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20100127">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA o_conn      TYPE REF TO zaplink_connector.
  DATA _connectors TYPE REF TO cl_oo_if_relations.
  DATA o_desc      TYPE REF TO cl_abap_typedescr.
  FIELD-SYMBOLS:
    &lt;im_cl&gt; LIKE LINE OF _connectors-&gt;implementing_classes,
    &lt;s_cl&gt; LIKE LINE OF _connectors-&gt;subclasses.

  CLEAR connector_list.
*Issue 3
* Check interface type (local or global).
  o_desc = cl_abap_structdescr=&gt;describe_by_name( &apos;ZAPLINK_CONNECTOR&apos; ).
* when Local : \PROGRAM=ZAPLINK_INSTALLER\INTERFACE=ZAPLINK_CONNECTOR
* when Global : \INTERFACE=ZAPLINK_CONNECTOR
  IF o_desc-&gt;absolute_name CP &apos;\INTERFACE=*&apos;.
* Global Interface : check use
    CREATE OBJECT _connectors
      EXPORTING
        clsname      = &apos;ZAPLINK_CONNECTOR&apos;
*      w_references = seox_true
*      w_implementings = seox_true
*      w_comprisings = seox_true
*      w_subclasses = seox_true
      EXCEPTIONS
        not_existing = 0    &quot; For installer ignore not existing class
        is_class     = 2
        OTHERS       = 3.
    IF sy-subrc &lt;&gt; 0.
      mac_raise_symsg &apos;ZAPLINK_CX_CONNECTOR&apos; zaplink_cx_connector=&gt;system_error.
    ENDIF.
    IF _connectors IS BOUND.
      LOOP AT _connectors-&gt;implementing_classes ASSIGNING &lt;im_cl&gt;
              WHERE exposure &lt;&gt; &apos;0&apos;   &quot; Private
                AND version = &apos;1&apos;     &quot; Active
                AND state &lt;&gt; &apos;0&apos;      &quot; Only modeled
                .

        TRY.

            _add_connector( class = &lt;im_cl&gt;-clsname ).

          CATCH cx_root.
            CONTINUE.
        ENDTRY.

      ENDLOOP.

      LOOP AT _connectors-&gt;subclasses ASSIGNING &lt;s_cl&gt;
              WHERE state &lt;&gt; &apos;0&apos;      &quot; Only modeled
                AND version = &apos;1&apos;     &quot; Active
                .

        TRY.

            _add_connector( class = &lt;s_cl&gt;-clsname ).

          CATCH cx_root.
            CONTINUE.
        ENDTRY.

      ENDLOOP.

      _update_def_class( ).
    ENDIF.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="TYPE2TEXT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " MTDDECLTYP="1">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Get object Type as text"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091120" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091120" CHANGEDBY="TBENSIAL" CHANGEDON="20091120" PARDECLTYP="3" TYPTYPE="1" TYPE="TD_TYPE_AS_TEXT">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>  FIELD-SYMBOLS:
    &lt;t&gt; LIKE LINE OF saptypes.

  READ TABLE saptypes ASSIGNING &lt;t&gt;
       WITH TABLE KEY object = data.
  IF sy-subrc = 0.
    result = &lt;t&gt;-text.
  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_ADD_CONNECTOR" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Add a connector to the list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="CLASS" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_CONNCLASS">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Object Type : ClassName"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="DEVCLASS" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_DEVCLASS" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Devlopment class"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  DATA connector TYPE REF TO zaplink_connector.
  DATA o_cx_root TYPE REF TO cx_root.
  DATA o_cx_create TYPE REF TO cx_sy_create_object_error.
  DATA cx_comp   TYPE REF TO zaplink_cx_component.
  DATA tabletypeline TYPE ko105.
  DATA _conn     LIKE LINE OF connector_list.
  DATA _class    LIKE LINE OF _conn-classes.
  DATA the_class LIKE LINE OF _classes.
  DATA _value    LIKE LINE OF value_table.

  FIELD-SYMBOLS:
    &lt;cl&gt; LIKE LINE OF _classes,
    &lt;c&gt;  LIKE LINE OF connector_list,
    &lt;st&gt; LIKE LINE OF saptypes,
    &lt;t&gt;  LIKE LINE OF connector-&gt;supported_types.

* try to build class
  TRY.

      CREATE OBJECT connector TYPE (class).

    CATCH cx_sy_create_object_error INTO o_cx_create.
      CASE o_cx_create-&gt;textid.
        WHEN cx_sy_create_object_error=&gt;abstract_class
          OR cx_sy_create_object_error=&gt;private_constructor
          OR cx_sy_create_object_error=&gt;protected_constructor.
* Ignore exception
        WHEN OTHERS.
          mac_cascade_raise_root o_mycx o_cx_create.
      ENDCASE.
    CATCH cx_root INTO o_cx_root.
      mac_cascade_raise_root o_mycx o_cx_root.
  ENDTRY.

  CHECK connector IS BOUND.

  IF NOT connector-&gt;uuid IS INITIAL               AND
     NOT connector-&gt;supported_types IS INITIAL.
    the_class-uuid = connector-&gt;uuid.
* Check same class already loaded
    READ TABLE _classes ASSIGNING &lt;cl&gt;
               WITH TABLE KEY uuid = the_class-uuid.
    IF sy-subrc = 0.
      IF NOT ( &lt;cl&gt;-devclass &lt;&gt; local_devclass AND devclass = local_devclass ).
        RAISE EXCEPTION TYPE zaplink_cx_connector EXPORTING
                        textid = zaplink_cx_connector=&gt;twice_class
                     connclass = class.
      ELSE.
* OK : Overide general class with local class
        LOOP AT &lt;cl&gt;-types ASSIGNING &lt;t&gt;.
          READ TABLE connector_list ASSIGNING &lt;c&gt;
               WITH TABLE KEY object = &lt;t&gt;-type.
          IF sy-subrc &lt;&gt; 0.
            RAISE EXCEPTION TYPE zaplink_cx_connector EXPORTING
                            textid = zaplink_cx_connector=&gt;system_error
                           cx_name = &apos;TYPE NOT FOUND&apos;.
          ELSE.
            DELETE &lt;c&gt;-classes WHERE classname = class.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.

    the_class-classname = class.
    IF NOT devclass IS INITIAL.
      the_class-devclass = devclass.
    ELSE.
      SELECT SINGLE devclass INTO the_class-devclass
        FROM tadir
        WHERE pgmid = &apos;R3TR&apos;
          AND object = &apos;CLAS&apos;
          AND obj_name = the_class-classname.
    ENDIF.
    the_class-types = connector-&gt;supported_types.
    INSERT the_class INTO TABLE _classes.

    LOOP AT connector-&gt;supported_types ASSIGNING &lt;t&gt;.
      READ TABLE connector_list ASSIGNING &lt;c&gt;
           WITH TABLE KEY object = &lt;t&gt;-type.
      IF sy-subrc &lt;&gt; 0.
        _conn-object = &lt;t&gt;-type.
        READ TABLE saptypes ASSIGNING &lt;st&gt;
                   WITH TABLE KEY object = _conn-object.
        IF sy-subrc = 0.
          _conn-text = &lt;st&gt;-text.
        ENDIF.
        INSERT _conn INTO TABLE connector_list.
        READ TABLE connector_list ASSIGNING &lt;c&gt;
             WITH TABLE KEY object = &lt;t&gt;-type.
      ENDIF.
      CLEAR _class.
      MOVE-CORRESPONDING the_class TO _class.
      INSERT _class INTO TABLE &lt;c&gt;-classes.
    ENDLOOP.
  ENDIF.

  CLEAR value_table.
  LOOP AT connector_list ASSIGNING &lt;c&gt;.
    _value-object = &lt;c&gt;-object.
    _value-text = &lt;c&gt;-text.
    APPEND _value TO value_table.
  ENDLOOP.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_SEARCH_CONNECTOR" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Search for a connector in list"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="2 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_CONN_DEF">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
     <ITEM SCONAME="TYPE" VERSION="1" CMPTYPE="1" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118" CHANGEDBY="TBENSIAL" CHANGEDON="20100125" PARPASSTYP="1" TYPTYPE="1" TYPE="TD_COMPTYPE">
      <TEXTS>
       <ITEM LANGU="E"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>  READ TABLE connector_list INTO result
             WITH TABLE KEY object = type.
  IF sy-subrc &lt;&gt; 0.
    READ TABLE saptypes TRANSPORTING NO FIELDS
               WITH TABLE KEY object = type.
    IF sy-subrc &lt;&gt; 0.
* Type &apos;&amp;1&apos; is not assigned to a ZAPLINK connector and is not a known SAPobject type (transaction SE01).
      RAISE EXCEPTION TYPE zaplink_cx_connector
                 EXPORTING textid = zaplink_cx_connector=&gt;invalid_type
                             type = type.
    ENDIF.
  ENDIF.
</SOURCE>
   </ITEM>
   <ITEM CMPNAME="_UPDATE_DEF_CLASS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " MTDDECLTYP="1" MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Update default"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_CONNECTOR" VERSION="1" LANGU="E" EDITORDER="1 " AUTHOR="TBENSIAL" CREATEDON="20091118">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Component"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>TYPES:
    BEGIN OF t_classlist,
      class TYPE seoclsname,
    END OF t_classlist.

  DATA classlist TYPE STANDARD TABLE OF t_classlist WITH DEFAULT KEY.
  DATA tabletypeline TYPE ko105.
  DATA _conn LIKE LINE OF connector_list.
  DATA _class LIKE LINE OF _conn-classes.
  DATA _types TYPE STANDARD TABLE OF ko100 WITH DEFAULT KEY.
  FIELD-SYMBOLS:
    &lt;c&gt; LIKE LINE OF connector_list.

* Default class
  LOOP AT connector_list ASSIGNING &lt;c&gt;.
    CHECK NOT &lt;c&gt;-classes IS INITIAL.
    LOOP AT &lt;c&gt;-classes INTO _class   WHERE devclass = LOCAL_DEVCLASS.
      EXIT.
    ENDLOOP.
    LOOP AT &lt;c&gt;-classes INTO _class   WHERE devclass = &apos;ZAPLINK-CONNECTORS-MAIN&apos;.
      EXIT.
    ENDLOOP.
    IF sy-subrc &lt;&gt; 0 or _class-classname is INITIAL.
      LOOP AT &lt;c&gt;-classes INTO _class WHERE devclass CP &apos;ZAPLINK-CONNECTORS*&apos;.
        EXIT.
      ENDLOOP.
    ENDIF.
    IF sy-subrc &lt;&gt; 0 or _class-classname is INITIAL.
      LOOP AT &lt;c&gt;-classes INTO _class WHERE devclass CP &apos;ZAPLINK*&apos;.
        EXIT.
      ENDLOOP.
    ENDIF.
    IF sy-subrc &lt;&gt; 0 or _class-classname is INITIAL.
      READ TABLE &lt;c&gt;-classes INTO _class INDEX 1.
    ENDIF.
    &lt;c&gt;-default_class = _class-classname.
  ENDLOOP.</SOURCE>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="TO_CONNECTOR" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="3" TYPE="ZAPLINK_CONNECTOR">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAP Link Connector interface"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_EXCEPTION" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="3" TYPE="ZAPLINK_CX_CONNECTOR">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception for Connectors"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_MSG_COLL" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="3" TYPE="ZAPLINK_MESSAGE_COLLECTOR">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Message Collector"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_RAW" VERSION="1" EXPOSURE="2" STATE="1" TYPTYPE="3" TYPE="ZAPLINK_RAW">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="RAW component with data"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TO_ROOT_EXCEPTION" VERSION="1" EXPOSURE="2" STATE="1" TYPTYPE="3" TYPE="ZAPLINK_CX">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="ZAPlink ROOT Exception"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_CLASS" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="21 " SRCCOLUMN1="4 " SRCROW2="25 " SRCCOLUMN2="18 " TYPESRC_LENG="130 ">
    BEGIN OF ts_class.
  INCLUDE TYPE ts_conn_class.
  TYPES:
      types TYPE tt_types,   &quot; supported_types
    END OF ts_class

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_COMPONENT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " TYPTYPE="4" SRCROW1="42 " SRCCOLUMN1="4 " SRCROW2="45 " SRCCOLUMN2="26 " TYPESRC_LENG="121 ">
    BEGIN OF ts_component,
          type TYPE td_comptype,
          name TYPE td_compname,
        END OF ts_component

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_CONNDATA" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="15 " SRCCOLUMN1="4 " SRCROW2="19 " SRCCOLUMN2="25 " TYPESRC_LENG="166 ">
    BEGIN OF ts_conndata,
          exists TYPE td_connexists,
          classname TYPE td_connclass,
          o_conn TYPE to_connector,
        END OF ts_conndata

    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Connector Info"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_SAPTYPES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="29 " SRCCOLUMN1="4 " SRCROW2="33 " SRCCOLUMN2="21 " TYPESRC_LENG="148 ">
    BEGIN OF ts_saptypes.
  INCLUDE TYPE ko100 AS hdr.
  TYPES:
      order TYPE td_typeorder,     &quot; order of prefered load
    END OF ts_saptypes

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_VALUE" VERSION="1" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="23 " TYPESRC_LENG="120 ">
    BEGIN OF ts_value,
           object TYPE td_comptype,
           text   TYPE td_comptext,
         END OF ts_value

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_CLASSES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="27 " SRCCOLUMN1="4 " SRCROW2="27 " SRCCOLUMN2="64 " TYPESRC_LENG="63 ">
    tt_classes TYPE SORTED TABLE OF ts_class WITH UNIQUE KEY uuid

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_SAPTYPES" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " TYPTYPE="4" SRCROW1="35 " SRCCOLUMN1="4 " SRCROW2="35 " SRCCOLUMN2="70 " TYPESRC_LENG="69 ">
    tt_saptypes TYPE HASHED TABLE OF ts_saptypes WITH UNIQUE KEY object

    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="List of SAP CTS Types"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_VALUES" VERSION="1" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="61 " TYPESRC_LENG="60 ">
    tt_values TYPE STANDARD TABLE OF ts_value WITH DEFAULT KEY

    <TEXTS>
     <ITEM LANGU="E"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
