<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="4CD1ACC84368141A9BBA6E88E79E1517" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_FILE" TYPE="CLAS" VERSION="1.01">
 <DIRECTORY DEVCLASS="ZAPLINK-FRAMEWORK-CORE" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" UUID="F5F8034B756EB95AE1000000AC120173" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X" MSG_ID="ZAPLINK_FILE">
   <TEXTS>
    <ITEM LANGU="E" DESCRIPT="ZAPLink : File Manager"/>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="C_FT_LOCAL" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;L&apos;" TYPTYPE="1" TYPE="T_FILETYPE">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Local"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="C_FT_SERVER" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;S&apos;" TYPTYPE="1" TYPE="T_FILETYPE">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Server"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="FILETYPES" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" TYPTYPE="4" SRCROW1="15 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="21 " TYPESRC_LENG="191 " TYPESRC="BEGIN OF filetypes,
        local     TYPE t_filetype VALUE &apos;L&apos;,                &quot;#EC NOTEXT
        server    TYPE t_filetype VALUE &apos;S&apos;,                &quot;#EC NOTEXT
      END OF filetypes
"/>
   <ITEM CMPNAME="_CONTENT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="6 " TYPTYPE="1" TYPE="T_CONTENT">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="File content"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_FILENAME" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="1" TYPE="T_FILENAME">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filename"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="_FILETYPE" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="5 " TYPTYPE="1" TYPE="T_FILETYPE">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Local or Server"/>
    </TEXTS>
   </ITEM>
  </ATTRIBUTS>
  <LOCAL>
   <TYPES>
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* IMPLEMENTATION OR PRIVATE METHOD&apos;S SIGNATURE</TYPES>
   <IMPLEMENTATIONS>
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* LOCAL HELPER CLASSES</IMPLEMENTATIONS>
   <MACROS>
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* IN THE IMPLEMENTATION PART OF THE CLASS</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="FILE_EXISTS" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="11 ">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Do file exists"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARDECLTYP="3" TYPTYPE="1" TYPE="ABAP_BOOL">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Do exists"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>
  DATA tmptable TYPE table_of_strings.
  DATA cx_name TYPE string.
  DATA cx TYPE REF TO cx_root.
  DATA _cx TYPE REF TO zaplink_cx_file.
  DATA _str LIKE LINE OF tmptable.
  FIELD-SYMBOLS:
    &lt;s&gt; LIKE LINE OF tmptable.

  CASE _filetype.
    WHEN c_ft_local.
      CALL METHOD cl_gui_frontend_services=&gt;file_exist
        EXPORTING
          file                 = _filename
        RECEIVING
          result               = result
        EXCEPTIONS
          cntl_error           = 1
          error_no_gui         = 2
          wrong_parameter      = 3
          not_supported_by_gui = 4
          OTHERS               = 5.
      IF sy-subrc &lt;&gt; 0.
        CASE sy-subrc.
          WHEN &apos;1&apos;.
            cx_name = &apos;FILE_OPEN_ERROR&apos;.
          WHEN OTHERS.
            cx_name = &apos;OTHERS&apos;.
        ENDCASE.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
        RAISE EXCEPTION TYPE zaplink_cx_file
              EXPORTING textid = zaplink_cx_file=&gt;load_error
                      filename = _filename
                      filetype = _filetype
                       cx_name = cx_name.
      ENDIF.
    WHEN c_ft_server.
      TRY.
          OPEN DATASET _filename FOR INPUT IN TEXT MODE ENCODING DEFAULT.
        CATCH cx_root INTO cx.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
          CREATE OBJECT _cx
            EXPORTING
              textid   = zaplink_cx_file=&gt;load_error
              filename = _filename
              filetype = _filetype
              previous = cx.
          _cx-&gt;update( ).
          RAISE EXCEPTION _cx.
      ENDTRY.
      IF sy-subrc &lt;&gt; 0.
        result = abap_false.
        EXIT.
      ENDIF.

      result = abap_true.
      TRY.
          CLOSE DATASET _filename.
        CATCH cx_root INTO cx.
          EXIT.
      ENDTRY.
    WHEN OTHERS.
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                    filetype = _filetype.
  ENDCASE.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_FILECONTENT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="5 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filecontent : Getter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARDECLTYP="3" TYPTYPE="1" TYPE="STRING">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="File Content as String"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
result = _content.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_FILENAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filename : Getter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARDECLTYP="3" TYPTYPE="1" TYPE="T_FILENAME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filename"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
result = _filename.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="GET_FILETYPE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Getter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="RESULT" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARDECLTYP="3" TYPTYPE="1" TYPE="T_FILETYPE">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filetype : Local or Server"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
result = _filetype.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="8 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Load file content"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
  DATA tmptable TYPE table_of_strings.
  DATA cx_name TYPE string.
  DATA cx TYPE REF TO cx_root.
  DATA _cx TYPE REF TO zaplink_cx_file.
  DATA _str LIKE LINE OF tmptable.
  FIELD-SYMBOLS:
    &lt;s&gt; LIKE LINE OF tmptable.

  IF _filetype = c_ft_local.
    CALL METHOD cl_gui_frontend_services=&gt;gui_upload
      EXPORTING
        filename                = _filename
      CHANGING
        data_tab                = tmptable
      EXCEPTIONS
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        bad_data_format         = 8
        header_not_allowed      = 9
        separator_not_allowed   = 10
        header_too_long         = 11
        unknown_dp_error        = 12
        access_denied           = 13
        dp_out_of_memory        = 14
        disk_full               = 15
        dp_timeout              = 16
        not_supported_by_gui    = 17
        error_no_gui            = 18
        OTHERS                  = 19.
    IF sy-subrc &lt;&gt; 0.
      CASE sy-subrc.
        WHEN &apos;1&apos;.
          cx_name = &apos;FILE_OPEN_ERROR&apos;.
        WHEN OTHERS.
          cx_name = &apos;OTHERS&apos;.
      ENDCASE.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;load_error
                    filename = _filename
                    filetype = _filetype
                     cx_name = cx_name.
    ENDIF.
    LOOP AT tmptable ASSIGNING &lt;s&gt;.
      CONCATENATE _content &lt;s&gt; cl_abap_char_utilities=&gt;newline
                  INTO _content.
    ENDLOOP.
  ELSEIF _filetype = c_ft_server.
    TRY.
        OPEN DATASET _filename FOR INPUT IN TEXT MODE ENCODING DEFAULT.
      CATCH cx_root INTO cx.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
        CREATE OBJECT _cx
          EXPORTING
            textid   = zaplink_cx_file=&gt;load_error
            filename = _filename
            filetype = _filetype
            previous = cx.
        _cx-&gt;update( ).
        RAISE EXCEPTION _cx.
    ENDTRY.
    IF sy-subrc &lt;&gt; 0.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;load_error
                    filename = _filename
                    filetype = _filetype
                     cx_name = &apos;OPEN DATASET&apos;.
    ENDIF.

    DO.
      TRY.
          READ DATASET _filename INTO _str.
        CATCH cx_root INTO cx.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
          CREATE OBJECT _cx
            EXPORTING
              textid   = zaplink_cx_file=&gt;load_error
              filename = _filename
              filetype = _filetype
              previous = cx.
          _cx-&gt;update( ).
          RAISE EXCEPTION _cx.
      ENDTRY.
      IF sy-subrc &lt;&gt; 0.
        EXIT.
      ENDIF.
      APPEND _str TO tmptable.
    ENDDO.

    TRY.
        CLOSE DATASET _filename.
      CATCH cx_root INTO cx.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
        CREATE OBJECT _cx
          EXPORTING
            textid   = zaplink_cx_file=&gt;load_error
            filename = _filename
            filetype = _filetype
            previous = cx.
        _cx-&gt;update( ).
        RAISE EXCEPTION _cx.
    ENDTRY.
    IF sy-subrc &lt;&gt; 0.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;load_error
                    filename = _filename
                    filetype = _filetype
                     cx_name = &apos;CLOSE DATASET&apos;.
    ENDIF.
  ELSE.
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                  filetype = _filetype.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="LOAD_DIALOG" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="10 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Load Dialog"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="FILENAME" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARPASSTYP="1" TYPTYPE="1" TYPE="T_FILENAME" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filename"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
  DATA ft TYPE filetable.
  DATA filecount TYPE i.
  DATA cx_name TYPE string.

  IF _filetype = c_ft_local.
    CALL METHOD cl_gui_frontend_services=&gt;file_open_dialog
      EXPORTING
*        window_title            =
*        default_extension       =
        default_filename        = filename
*        file_filter             =
*        with_encoding           =
*        initial_directory       =
*        multiselection          =
      CHANGING
        file_table              = ft
        rc                      = filecount
*        user_action             =
*        file_encoding           =
      EXCEPTIONS
        file_open_dialog_failed = 1
        cntl_error              = 2
        error_no_gui            = 3
        not_supported_by_gui    = 4
        OTHERS                  = 5.
    IF sy-subrc &lt;&gt; 0 OR filecount &lt; 0.
      CASE sy-subrc.
        WHEN &apos;1&apos;.
          cx_name = &apos;file_open_dialog_failed&apos;.
        WHEN OTHERS.
          cx_name = &apos;OTHERS&apos;.
      ENDCASE.
* Exception &amp;cx_name&amp; while loading file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;load_error
                    filename = filename
                    filetype = _filetype
                     cx_name = cx_name.
    ENDIF.
    IF filecount = 0 OR ft IS INITIAL.
* Dialog canceled by user
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;dialog_canceled
                    filename = filename
                    filetype = _filetype.
    ENDIF.
    READ TABLE ft INTO _filename INDEX 1.
  ELSEIF _filetype = c_ft_server.
* No dialog right now
  ELSE.
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                  filetype = _filetype.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SAVE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="7 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Save file content"/>
    </TEXTS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
  DATA tmptable  TYPE table_of_strings.
*  DATA cx_name   TYPE string.
  DATA o_cx      TYPE REF TO cx_root.
  DATA o_cx_file TYPE REF TO zaplink_cx_file.
  FIELD-SYMBOLS:
    &lt;s&gt; LIKE LINE OF tmptable.

  SPLIT _content AT cl_abap_char_utilities=&gt;newline
            INTO TABLE tmptable.

  IF _filetype = c_ft_local.
    IF _filename IS INITIAL.
      save_dialog( ).
    ELSE.
*     CALL METHOD cl_gui_frontend_services=&gt;gui_download
*     Not used because of missing param : SHOW_TRANSFER_STATUS
      CALL FUNCTION &apos;GUI_DOWNLOAD&apos;
        EXPORTING
*         BIN_FILESIZE                    =
          filename                        = _filename
          filetype                        = &apos;DAT&apos;
*         APPEND                          = &apos; &apos;
*         WRITE_FIELD_SEPARATOR           = &apos; &apos;
*         HEADER                          = &apos;00&apos;
*         TRUNC_TRAILING_BLANKS           = &apos; &apos;
*         WRITE_LF                        = &apos;X&apos;
*         COL_SELECT                      = &apos; &apos;
*         COL_SELECT_MASK                 = &apos; &apos;
*         DAT_MODE                        = &apos; &apos;
*         CONFIRM_OVERWRITE               = &apos; &apos;
*         NO_AUTH_CHECK                   = &apos; &apos;
*         CODEPAGE                        = &apos; &apos;
*         IGNORE_CERR                     = ABAP_TRUE
*         REPLACEMENT                     = &apos;#&apos;
*         WRITE_BOM                       = &apos; &apos;
*         TRUNC_TRAILING_BLANKS_EOL       = &apos;X&apos;
*         WK1_N_FORMAT                    = &apos; &apos;
*         WK1_N_SIZE                      = &apos; &apos;
*         WK1_T_FORMAT                    = &apos; &apos;
*         WK1_T_SIZE                      = &apos; &apos;
*         WRITE_LF_AFTER_LAST_LINE        = ABAP_TRUE
          show_transfer_status            = abap_false
*       IMPORTING
*         FILELENGTH                      =
        TABLES
          data_tab                        = tmptable
*         FIELDNAMES                      =
        EXCEPTIONS
          file_write_error                = 1
          no_batch                        = 2
          gui_refuse_filetransfer         = 3
          invalid_type                    = 4
          no_authority                    = 5
          unknown_error                   = 6
          header_not_allowed              = 7
          separator_not_allowed           = 8
          filesize_not_allowed            = 9
          header_too_long                 = 10
          dp_error_create                 = 11
          dp_error_send                   = 12
          dp_error_write                  = 13
          unknown_dp_error                = 14
          access_denied                   = 15
          dp_out_of_memory                = 16
          disk_full                       = 17
          dp_timeout                      = 18
          file_not_found                  = 19
          dataprovider_exception          = 20
          control_flush_error             = 21
          OTHERS                          = 22.
      IF sy-subrc &lt;&gt; 0.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
        TRY.
            o_cx_file ?= zaplink_cx=&gt;create_from_mf_cx( funcname = &apos;GUI_DOWNLOAD&apos;
                                                           subrc = sy-subrc
                                                       classname = &apos;ZAPLINK_CX_FILE&apos;
                                                          textid = zaplink_cx_file=&gt;save_error ).
            o_cx_file-&gt;filename = _filename.
            o_cx_file-&gt;filetype = _filetype.
          CATCH cx_root INTO o_cx.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
            CREATE OBJECT o_cx_file
              EXPORTING
                textid   = zaplink_cx_file=&gt;save_error
                filename = _filename
                filetype = _filetype
                previous = o_cx.
            o_cx_file-&gt;update( ).
            RAISE EXCEPTION o_cx_file.
        ENDTRY.
        RAISE EXCEPTION o_cx_file.
      ENDIF.
    ENDIF.
  ELSEIF _filetype = c_ft_server.
    TRY.
        OPEN DATASET _filename FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.
      CATCH cx_root INTO o_cx.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
        CREATE OBJECT o_cx_file
          EXPORTING
            textid   = zaplink_cx_file=&gt;save_error
            filename = _filename
            filetype = _filetype
            previous = o_cx.
        o_cx_file-&gt;update( ).
        RAISE EXCEPTION o_cx_file.
    ENDTRY.
    IF sy-subrc &lt;&gt; 0.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;save_error
                    filename = _filename
                    filetype = _filetype
                     cx_name = &apos;OPEN DATASET&apos;.
    ENDIF.

    LOOP AT tmptable ASSIGNING &lt;s&gt;.
      TRY.
          TRANSFER &lt;s&gt; TO _filename.
        CATCH cx_root INTO o_cx.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
          CREATE OBJECT o_cx_file
            EXPORTING
              textid   = zaplink_cx_file=&gt;save_error
              filename = _filename
              filetype = _filetype
              previous = o_cx.
          o_cx_file-&gt;update( ).
          RAISE EXCEPTION o_cx_file.
      ENDTRY.
    ENDLOOP.

    TRY.
        CLOSE DATASET _filename.
      CATCH cx_root INTO o_cx.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
        CREATE OBJECT o_cx_file
          EXPORTING
            textid   = zaplink_cx_file=&gt;save_error
            filename = _filename
            filetype = _filetype
            previous = o_cx.
        o_cx_file-&gt;update( ).
        RAISE EXCEPTION o_cx_file.
    ENDTRY.
    IF sy-subrc &lt;&gt; 0.
* Exception &amp;cx_name&amp; while saving file &amp;filename&amp; (&amp;filetype&amp;)
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;save_error
                    filename = _filename
                    filetype = _filetype
                     cx_name = &apos;CLOSE DATASET&apos;.
    ENDIF.
  ELSE.
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                  filetype = _filetype.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SAVE_DIALOG" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="9 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Save Dialog"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="FILENAME" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARPASSTYP="1" TYPTYPE="1" TYPE="T_FILENAME" PAROPTIONL="X">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filename"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
DATA retfilename TYPE string.
  DATA retpath TYPE string.
  DATA retfullpath TYPE string.
  DATA retuseract TYPE i.

  IF filename IS INITIAL.
    retfilename = _filename.
  ELSE.
    retfilename = filename.
  ENDIF.
  IF _filetype = c_ft_local.

    CALL METHOD cl_gui_frontend_services=&gt;file_save_dialog
      EXPORTING
        default_file_name = retfilename
      CHANGING
        filename          = retfilename
        path              = retpath
        fullpath          = retfullpath
        user_action       = retuseract.
    IF retuseract &lt;&gt; 0.
* Dialog canceled by user
      RAISE EXCEPTION TYPE zaplink_cx_file
            EXPORTING textid = zaplink_cx_file=&gt;dialog_canceled
                    filename = filename
                    filetype = _filetype.
    ENDIF.
    _filename = retfilename.
  ELSEIF _filetype = c_ft_server.
* No dialog right now
  ELSE.
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                  filetype = _filetype.
  ENDIF.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_FILECONTENT" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="6 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filecontent : Setter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARPASSTYP="1" TYPTYPE="1" TYPE="STRING">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="File Content as String"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
_content = data.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_FILENAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="3 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filename : Setter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARPASSTYP="1" TYPTYPE="1" TYPE="T_FILENAME">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filename"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
IF data IS INITIAL.
* Filename &apos;&amp;file&amp;&apos; is invalid. Please provide a valid filename for filetype &apos;&amp;filetype&amp;&apos;
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filename
                  filename = data
                  filetype = _filetype.
  ENDIF.
  IF NOT _filetype IS INITIAL.
* TODO Check filename
  ENDIF.
  _filename = data.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="SET_FILETYPE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="4 " MTDNEWEXC="X">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Setter"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="DATA" VERSION="1" CMPTYPE="1" EDITORDER="1 " PARPASSTYP="1" TYPTYPE="1" TYPE="T_FILETYPE">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="Filetype : Local or Server"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <EXCEPTIONS>
     <ITEM SCONAME="ZAPLINK_CX_FILE" VERSION="1" LANGU="E" EDITORDER="1 ">
      <TEXTS>
       <ITEM LANGU="E" DESCRIPT="ZAPlink Exception for Files"/>
      </TEXTS>
     </ITEM>
    </EXCEPTIONS>
    <SOURCE>
IF data &lt;&gt; c_ft_local AND data &lt;&gt; c_ft_server.
    RAISE EXCEPTION TYPE zaplink_cx_file
          EXPORTING textid = zaplink_cx_file=&gt;invalid_filetype
                  filetype = data.
  ENDIF.
  IF NOT _filename IS INITIAL.
* TODO Check filename
  ENDIF.
  _filetype = data.</SOURCE>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" VERSION="1" IMPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="T_CONTENT" VERSION="1" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="1" TYPE="STRING">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="File content"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_FILENAME" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="1" TYPE="ZAPLINK_CX_FILE=&gt;T_FILENAME">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filename"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="T_FILETYPE" VERSION="1" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="1" TYPE="ZAPLINK_CX_FILE=&gt;T_FILETYPE">
    <TEXTS>
     <ITEM LANGU="E" DESCRIPT="Filetype : Local or Server"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
